# Generated by Django 5.2.6 on 2025-09-15 14:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PuzzleTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "size",
                    models.PositiveSmallIntegerField(help_text="Number of rows/cols (e.g., 9)"),
                ),
                (
                    "box_h",
                    models.PositiveSmallIntegerField(help_text="Sub-box height (e.g., 3 for 9×9)"),
                ),
                (
                    "box_w",
                    models.PositiveSmallIntegerField(help_text="Sub-box width (e.g., 3 for 9×9)"),
                ),
                (
                    "givens",
                    models.TextField(
                        help_text="Board string of length size*size, '0' for empty. Indexing is row-major."
                    ),
                ),
                (
                    "solution",
                    models.TextField(
                        help_text="Solved board string of length size*size, values 1..size in row-major order."
                    ),
                ),
                (
                    "difficulty_metric",
                    models.FloatField(
                        help_text="Raw engine metric used to derive difficulty label"
                    ),
                ),
                (
                    "difficulty_label",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                            ("expert", "Expert"),
                        ],
                        help_text="Bucketed difficulty label",
                        max_length=16,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        help_text="Origin of puzzle (e.g., engine name or import source)",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at", "size", "difficulty_label"],
                "indexes": [
                    models.Index(fields=["size", "difficulty_label"], name="puzzle_size_diff")
                ],
            },
        ),
        migrations.CreateModel(
            name="GameSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "board_state",
                    models.JSONField(
                        default=str,
                        help_text="Current board; either 1D string or structured JSON. Use '0' for empty if string.",
                    ),
                ),
                (
                    "pencil_marks",
                    models.JSONField(
                        default=dict,
                        help_text="Map of cell_index (0..N-1) to list of candidate integers",
                    ),
                ),
                ("mistakes_count", models.PositiveIntegerField(default=0)),
                ("time_seconds", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                        ],
                        default="in_progress",
                        max_length=16,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "puzzle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="puzzle.puzzletemplate"
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="DailyChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "puzzle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="puzzle.puzzletemplate"
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
    ]
